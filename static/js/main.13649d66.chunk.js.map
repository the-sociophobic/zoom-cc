{"version":3,"sources":["utils/models/subtitle.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["id","type","APIToken","required","example","line","number","posted","Input","props","focus","inputFieldRef","current","blur","onKeyDown","e","value","match","onChange","replace","onFocus","onBlur","render","className","errorMessage","ref","placeholder","event","target","disabled","label","React","createRef","Component","axios","defaults","headers","post","serverURL","App","split","map","string","componentDidMount","login","state","activateLoader","fn","a","setState","loading","subtitles","forEach","sub","style","tryPost","URL","res","data","error","console","log","alert","length","window","localStorage","setItem","logout","removeItem","undefined","next","saveSubtitle","subtitle","_","pick","keys","model","deleteSubtitle","swapSubtitles","sub0","sub1","subtitle0","subtitle1","insertSubtitle","prevSub","index","slice","setTimeout","renderLoading","renderLogin","APITokenInput","onClick","renderControl","indexOf","renderSubtitles","filter","key","format","Date","rows","keyCode","includes","height","initialText","ReactDOM","createPortal","document","body","getItem","Boolean","location","hostname","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.13649d66.chunk.js","sourcesContent":["export default {\n  id: {\n    type: 'ref',\n  },\n  APIToken: {\n    type: 'string',\n    required: true,\n    example: \"zjhdfboepsDKFB\",\n  },\n  line: {\n    type: 'string',\n    required: true,\n    example: \"привет,\",\n  },\n  number: {\n    type: 'number',\n    required: true,\n    example: 0,\n  },\n  posted: {\n    type: 'number',\n    example: 1230000,\n  }\n}","import React, { Component } from 'react'\n\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props)\n    this.inputFieldRef = props.inputFieldRef || React.createRef()\n  }\n\n  focus = () => this.inputFieldRef.current && this.inputFieldRef.current.focus()\n  blur = () => this.inputFieldRef.current && this.inputFieldRef.current.blur()\n\n  onKeyDown = e => {\n    const value = \"\" + this.props.value\n    \n    if (this.props.number)\n      if (this.props.value && value.match(/[^0-9]/g))\n        this.props.onChange(value.replace(/[^0-9]/g, ''))\n    this.props.onKeyDown && this.props.onKeyDown(e)\n  }\n  onFocus = e => {\n    this.props.onFocus && this.props.onFocus(e)\n  }\n  onBlur = e => {\n    this.props.onBlur && this.props.onBlur(e)\n  }\n\n  render = () => (\n    <div\n      className={\"form-group \" +\n        this.props.className + \" \" +\n        (this.props.errorMessage && \"form-group--error\")\n      }\n    >\n      <input\n        ref={this.inputFieldRef}\n        type={this.props.number ? \"number\" : \"text\"}\n        className=\"form-group__input\"\n        placeholder={this.props.placeholder}\n        required={this.props.required}\n        value={this.props.value}\n        onChange={event => this.props.onChange(event.target.value)}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onKeyDown={this.onKeyDown}\n        disabled={this.props.disabled}\n      />\n      {this.props.label &&\n        <label className=\"form-group__label\">\n          {this.props.label}\n        </label>}\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport axios from 'axios'\nimport { format } from 'date-fns'\nimport _ from 'lodash'\n\nimport model from 'utils/models/subtitle'\nimport Input from 'components/Input'\n\nimport 'styles/index.sass'\n\n\naxios.defaults.headers.post['Accept'] = \"*/*\"\naxios.defaults.headers.post['Content-Type'] = \"json\"\n\nconst serverURL = process.env.NODE_ENV === 'production' ?\n  \"https://schedule.tochkadostupa.spb.ru/zoom-cc/\"\n  :\n  \"http://localhost:3000/zoom-cc/\"\n\n\nconst testCC = `\n  Я в рот ебал твою мать,\n  Пойду насру ей на грудь.\n  Я не хочу её ебать,\n  Лучше мочи пойти хлебнуть.\n  Говно вкусней её стряпни.\n  А пук лучше звучит,\n  Чем голос этой хуерги.\n  Пойди и ёбни ей с ноги.\n`\n.split('\\n')\n.map(string => ({\n  line: string,\n  ref: React.createRef(),\n}))\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    const APIToken = window.localStorage.getItem('APIToken')\n\n    this.state = {\n      APIToken: APIToken || \"\",\n      APITokenInput: \"\",\n      subtitles: [],\n      initialText: \"\",\n      loading: false,\n    }\n  }\n\n  componentDidMount = () =>\n    this.login(this.state.APIToken)\n\n  activateLoader = async fn => {\n    this.setState({loading: true})\n    await fn()\n    this.state.subtitles\n      .forEach(sub =>\n        sub.ref.current &&\n          (sub.ref.current.style = ''))\n    this.setState({loading: false})\n  }\n\n  tryPost = async (URL, props) =>\n    await this.activateLoader(async () => {\n      const res = (await axios.post(URL, props)).data\n\n      if (res.error) {\n        console.log(res.error)\n        alert(\"Произошла ошибка. Проверьте консоль\")\n        return\n      }\n  \n      this.setState({\n        subtitles: [\n          ...res,\n          {\n            APIToken: this.state.APIToken,\n            number: res.length === 0 ? 1 : res[res.length - 1].number + 1,\n            line: \"\"\n          }\n        ].map(sub => ({\n          ...sub,\n          ref: React.createRef()\n        }))\n      })\n    })\n\n  login = async APIToken => {\n    if (APIToken) {\n      await this.tryPost(\n        serverURL + \"login\",\n        { APIToken: APIToken })\n\n      this.setState({APIToken: APIToken})\n      window.localStorage.setItem('APIToken', APIToken)\n    }\n  }\n\n  logout = () => {\n    window.localStorage.removeItem('APIToken')\n    this.setState({\n      APIToken: undefined,\n      subtitles: [],\n    })\n  }\n\n  next = async () =>\n    await this.tryPost(\n      serverURL + \"next\",\n      { APIToken: this.state.APIToken })\n\n  saveSubtitle = async sub =>\n    await this.tryPost(\n      serverURL + \"save\",\n      { subtitle: _.pick(sub, _.keys(model)) })\n\n  deleteSubtitle = async sub => \n    await this.tryPost(\n      serverURL + \"delete\",\n      { subtitle: _.pick(sub, _.keys(model)) })\n\n  swapSubtitles = async (sub0, sub1) =>\n    await this.tryPost(\n      serverURL + \"swap\",\n      { subtitle0: sub0.id, subtitle1: sub1.id })\n\n  insertSubtitle = (prevSub, index) => {\n    this.setState({\n      subtitles: [\n        ...this.state.subtitles.slice(0, index + 1),\n        {\n          line: \"\",\n          number: prevSub.number + 1,\n          APIToken: this.state.APIToken,\n          ref: React.createRef(),\n        },\n        ...this.state.subtitles.slice(index + 1)\n      ]\n    })\n    setTimeout(() =>\n      this.state.subtitles[index + 1].ref.current.focus()\n    , 200)\n  }\n\n\n  renderLoading = () =>\n    this.state.loading &&\n      <div className=\"loader\" />\n\n  renderLogin = () =>\n    <div className=\"login\">\n      <div className=\"container\">\n        <Input\n          value={this.state.APITokenInput}\n          onChange={value => this.setState({APITokenInput: value})}\n          label=\"ZOOM API token\"\n          placeholder=\"Скопируйте и вставьте ZOOM API token из приложения\"\n        />\n        <button\n          className=\"button button--main mt-3\"\n          onClick={() => this.login(this.state.APITokenInput)}\n        >\n          войти\n        </button>\n      </div>\n    </div>\n\n  renderControl = () =>\n    <div className=\"control\">\n      <div className=\"container\">\n        <div className=\"control__header\">\n          <div className=\"control__header__token\">\n            {this.state.APIToken\n              .slice(this.state.APIToken.indexOf('id'))}\n          </div>\n          <button\n            className=\"control__header__exit\"\n            onClick={() => this.logout()}\n          >\n            выйти\n          </button>\n        </div>\n\n        {this.renderSubtitles()}\n\n        <div className=\"control__next\">\n          <button\n            disabled={\n              this.state.subtitles.filter(sub => !sub.posted).length === 0 ||\n              !this.state.subtitles.filter(sub => !sub.posted)[0].id}\n            className=\"button button--main\"\n            onClick={() => this.next()}\n          >\n            NEXT\n          </button>\n        </div>\n      </div>\n    </div>\n\n  renderSubtitles = () =>\n    <div className=\"control__subtitles\">\n      {this.state.subtitles.length === 0 || !this.state.subtitles[0].id ?\n        <>\n          <textarea\n            className=\"control__subtitles__textarea\"\n            value={this.state.initialText}\n            onChange={e => this.setState({initialText: e.target.value})}\n            placeholder=\"введите текст и нажмите сохранить\"\n          />\n          <button\n            className=\"button button--main\"\n            disabled={this.state.initialText.length === 0}\n            onClick={() => this.saveSubtitle({\n              line: this.state.initialText,\n              APIToken: this.state.APIToken,\n              number: 1,\n            })}\n          >\n            сохранить\n          </button>\n        </>\n        :\n        this.state.subtitles\n          .map((sub, index) =>\n            <div\n              key={sub.id || sub.number}\n              className={`control__subtitles__item ${sub.posted && \"control__subtitles__item--posted\"}`}\n            >\n              <div className=\"control__subtitles__item__number\">\n                {sub.id && `${sub.number}.`}\n              </div>\n              {sub.posted ?\n                <>\n                  <div className=\"control__subtitles__item__input\">\n                    {sub.line}\n                  </div>\n                  <div className=\"control__subtitles__item__posted\">\n                    {format(new Date(sub.posted), 'HH:mm:ss')}\n                  </div>\n                </>\n                :\n                <>\n                  <textarea\n                    ref={sub.ref}\n                    className=\"control__subtitles__item__input\"\n                    value={sub.line}\n                    rows={1}\n                    onKeyDown={e =>\n                      e.keyCode === 27 &&\n                      (sub.ref.current && sub.ref.current.blur())}\n                    onChange={e => {\n                      this.setState({\n                        subtitles: [\n                          ...this.state.subtitles.slice(0, index),\n                          {\n                            ...sub,\n                            line: e.target.value,\n                          },\n                          ...this.state.subtitles.slice(index + 1),\n                        ]\n                      })\n\n                      if (e.target.value.includes('\\n'))\n                        sub.ref.current.style.height = \"200px\"\n                    }}\n                    onBlur={() => this.saveSubtitle(sub)}\n                  />\n                  <div className=\"control__subtitles__item__buttons\">\n                    <button\n                      className=\"button button--transparent\"\n                      disabled={!sub.id || index > this.state.subtitles.length - 3}\n                      onClick={() => this.insertSubtitle(sub, index)}\n                    >\n                      +\n                    </button>\n                    <button\n                      className=\"button button--transparent\"\n                      disabled={!sub.id}\n                      onClick={() => this.deleteSubtitle(sub)}\n                    >\n                      -\n                    </button>\n                    <button\n                      className=\"button button--transparent\"\n                      disabled={!sub.id || index === this.state.subtitles.length - 2}\n                      onClick={() => this.swapSubtitles(sub, this.state.subtitles[index + 1])}\n                    >\n                      ⇩\n                    </button>\n                    <button\n                      className=\"button button--transparent\"\n                      disabled={!sub.id || index === 0 || this.state.subtitles[index - 1].posted !== 0}\n                      onClick={() => this.swapSubtitles(sub, this.state.subtitles[index - 1])}\n                    >\n                      ↑\n                    </button>\n                  </div>\n                </>\n              }\n            </div>\n          )}\n    </div>\n\n\n  render = () =>\n    <div className=\"App\">\n      {this.state.APIToken ?\n        this.renderControl()\n        :\n        this.renderLogin()}\n\n      {ReactDOM.createPortal(\n        this.renderLoading(),\n        document.body)}\n    </div>\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}